<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	       http://www.springframework.org/schema/beans
	       http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	       http://www.springframework.org/schema/tx
	       http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	       http://www.springframework.org/schema/aop
	       http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	       http://www.springframework.org/schema/context
	       http://www.springframework.org/schema/context/spring-context-3.2.xsd
	       http://www.springframework.org/schema/mvc
	       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 	
			开启aop注解支持,由于mvc和spring中的bean是两个不同的application,
			因此需要代理controller层时要将相应的aop配置和bean配置在mvc.xml中
	-->
    <aop:aspectj-autoproxy/>
	<mvc:annotation-driven/>
	<!-- aop操作日志类 -->
	
    <context:component-scan base-package="com.qiancloud.webclass.action" /> 
    <!-- 配置请求处理的前缀和后缀 -->
     <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
		<!-- 解析的是jsp页面 -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
    
    <!-- 启动 Spring MVC 的注解功能，完成请求和注解 POJO 的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" >  
		<property name="order" value="0" />
	</bean>
	
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
                <ref bean="mappingJacksonHttpMessageConverter"/>  
            </list>  
        </property>  
    </bean> 
	
	<!-- json转化器,此处使用了springMVC4 jackson的jar替换为com.fasterxml.jackson -->
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	  <property name="supportedMediaTypes">
	   <list>
	   	<!-- ie下ajax请求会下载文件,解决之,注意顺序不可乱(然而实测发现还是有下载的情况,预计是input的submit提交方式的问题) -->
	    <value>text/html;charset=UTF-8</value>
	    <value>application/json;charset=UTF-8</value>
	   </list>
	  </property>
 	</bean>
	
	<!-- 配置异常处理页面 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 默认的异常处理页面, 只需要配置名称即可, 需要配置前缀和后缀-->
		<property name="defaultErrorView" value="404" />
		<!-- 配置异常与处理页面的映射关系, 如果没有找到则使用  defaultErrorView 配置-->
		<property name="exceptionMappings">
			<props>
			    <!-- 如果是RuntimeException则跳转到runTime -->
				<prop key="java.lang.RuntimeException">404</prop>
			</props>
		</property>
	</bean>
	<!-- 配置文件上传类,最大50M -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="52428800" />
	</bean>
 </beans>